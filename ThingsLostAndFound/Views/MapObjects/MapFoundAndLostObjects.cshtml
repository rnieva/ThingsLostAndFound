@{string mapsKey = System.Configuration.ConfigurationManager.AppSettings["MapsKey"]; } @* Read the MapsKey value from a config file out of my project, so avoid to upload this inromation to GitHub*@
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=@mapsKey"></script>
@*@model ThingsLostAndFound.Models.InfoMarkerFoundObject*@
@model IEnumerable<object>
@using System.Threading;
@using System.Globalization;
@{
    ViewBag.Title = "Lost and Found Objects Map";
    Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US"); //for change , by . in Lat and Log
    List<ThingsLostAndFound.Models.InfoMarkerFoundObject> foundObjectList = Model.ToList()[0] as List<ThingsLostAndFound.Models.InfoMarkerFoundObject>;
    List<ThingsLostAndFound.Models.InfoMarkerLostObject> lostObjectList = Model.ToList()[1] as List<ThingsLostAndFound.Models.InfoMarkerLostObject>;
}
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Lost and Found Objects Map</title>
</head>
<body>
    <h2>Lost and Found Object Map</h2>
    <div>
        <div id="map_canvas" style="height: 500px; width: 900px;"></div>
    </div>
</body>
</html>
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: red;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/mapInit.js")"></script>
    <script type="text/javascript">
        var map;
        var marker;
        showMarkersFO();
        function showMarkersFO() {
            var bounds = new google.maps.LatLngBounds();
            var la = [];
            var lo = [];
            var info = [];
            var titles = [];
            var infohtml;
            @foreach (var marker in foundObjectList)
            {
            <text>
                la.push(@marker.Latitude);
                lo.push(@marker.Longitude);
                titles.push("@marker.Title");
                @if (marker.Img == true)
                { <text>
                    infohtml = "<div><b>Found Object</b><h2>@marker.Title</h2></div><p> @marker.Category<p> @marker.Address<p>@marker.Location<p>" + "<p><img src=~/File?id=@marker.FileId alt= height=42 width=42 /></p>" + `@Html.ActionLink("More Info", "Details", "FoundObjects", new { id = @marker.Id }, null)` + "<p>" + `@Html.ActionLink("Contact", "ContactUserFoundObject", "UsersContact", new { id = @marker.Id, title = @marker.Title, userName = @marker.UserNameReport, securityQuestion = @marker.SecurityQuestion  }, null)`;
                  </text>
                }else
                { <text>
                    infohtml = "<div><b>Found Object</b><h2>@marker.Title</h2></div><p> @marker.Category<p> @marker.Address<p>@marker.Location<p>" + `@Html.ActionLink("More Info", "Details", "FoundObjects", new { id = @marker.Id }, null)` + "<p>" + `@Html.ActionLink("Contact", "ContactUserFoundObject", "UsersContact", new { id = @marker.Id, title = @marker.Title, userName = @marker.UserNameReport, securityQuestion = @marker.SecurityQuestion  }, null)`;
                  </text>
                }
                info.push(infohtml);
            </text>
                                                                                                                                                                                                        }
            var infoWindow = new google.maps.InfoWindow({ content: "Loading..." });
            var marker, i;
            for (i = 0; i < la.length; i++) // for example I choose as index the latitude
            {
                var point = new google.maps.LatLng(la[i], lo[i]);
                bounds.extend(point);
                marker = new google.maps.Marker({
                    position: point,
                    title: titles[i],
                    icon:'http://maps.google.com/mapfiles/ms/icons/red-dot.png',
                    map: map
               });
               google.maps.event.addListener(marker, 'click', (function(marker, i) //Closures
               {
                    return function()
                    {
                        infoWindow.setContent(info[i]);
                        infoWindow.open(map, marker);
                    }
                })(marker, i)); //Closures
            }

            var la2 = [];
            var lo2 = [];
            var info2 = [];
            var titles2 = [];
            var infohtml2;
            @foreach (var marker in lostObjectList)
            {
                <text>
                la2.push(@marker.Latitude);
                lo2.push(@marker.Longitude);
                titles2.push("@marker.Title");
               @if (marker.Img == true)
                 { <text>
                     infohtml2 = "<div><b>Lost Object</b><h2>@marker.Title</h2></div><p> @marker.Category<p> @marker.Address<p>@marker.Location<p>" + "<p><img src=~/File?id=@marker.FileId alt= height=42 width=42 /></p>" + `@Html.ActionLink("More Info", "Details", "LostObjects", new { id = @marker.Id }, null)` + "<p>" + `@Html.ActionLink("Contact", "ContactUserLostObject", "UsersContact", new { id = @marker.Id, title = @marker.Title, userName = @marker.UserNameReport }, null)`;
                     </text>
                 }
                 else
                 { <text>
                     infohtml2 = "<div><b>Lost Object</b><h2>@marker.Title</h2></div><p> @marker.Category<p> @marker.Address<p>@marker.Location<p>" + `@Html.ActionLink("More Info", "Details", "LostObjects", new { id = @marker.Id }, null)` + "<p>" + `@Html.ActionLink("Contact", "ContactUserLostObject", "UsersContact", new { id = @marker.Id, title = @marker.Title, userName = @marker.UserNameReport }, null)`;
                     </text>
                 }
                info2.push(infohtml2);
                </text>
            }
            var infoWindow = new google.maps.InfoWindow({ content: "Loading..." });
            var marker, i;
            for (i = 0; i < la2.length; i++) // for example I choose as index the latitude
            {
                var point2 = new google.maps.LatLng(la2[i], lo2[i]);
                bounds.extend(point);
                marker = new google.maps.Marker({
                    position: point2,
                    title: titles2[i],
                    icon:'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
                    map: map
                });
                google.maps.event.addListener(marker, 'click', (function(marker, i) //Closures
                {
                    return function()
                    {
                        infoWindow.setContent(info2[i]);
                        infoWindow.open(map, marker);
                    }
                })(marker, i)); //Closures
            }
        }

    </script>
}
