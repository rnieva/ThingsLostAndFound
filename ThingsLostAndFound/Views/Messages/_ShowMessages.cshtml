@model      ThingsLostAndFound.Models.IndexViewModel
@{
    IEnumerable<ThingsLostAndFound.Models.Message> messagesList = Model.MessagesList as IEnumerable<ThingsLostAndFound.Models.Message>;
    List<int> idNewmsgs = Model.IdNewmsgs as List<int>;
}
<html>
    <body>
        <h2>Messages</h2>
        <p></p>
        <table class="table">
            <tr>
                <td>
                    @Html.Label("Message")
                </td>
                <td>
                    @Html.Label("Sended by")
                </td>
                <td>
                    @Html.Label("to")
                </td>
                <td>
                    @Html.Label("Subject")
                </td>
                <td>
                    @Html.Label("Object")
                </td>
                <td>
                    @Html.Label("Date Message")
                </td>
                <td>
                    @Html.Label("Response")
                </td>
                <td>
                    @Html.Label("Delete")
                </td>
            </tr>
            @foreach (var item in messagesList)
            {
                <tr>
                    <td>
                        @{
                            bool isInList = idNewmsgs.IndexOf(item.Id) != -1;   //check if the msg is new

                            var isInList2 = idNewmsgs.Contains(item.Id);

                            if (isInList)
                            {
                                <font color="red">
                                    @Html.DisplayFor(modelItem => item.Message1)
                                </font>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.Message1)
                            }
                         }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InfoUser.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InfoUser1.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.subject)
                    </td>
                    <td>
                        @{
                            // We can see in the subject column if the object is Found or Lost
                            if (item.FoundObjectId != null)
                            {
                                @Html.ActionLink(item.FoundObject.Title, "Details", "FoundObjects", new { id = item.FoundObjectId }, null)
                            }
                            if (item.LostObjectId != null)
                            {
                                @Html.ActionLink(item.LostObject.Title, "Details", "LostObjects", new { id = item.LostObjectId }, null)
                            }
                            if (item.subject == "Support")
                            {
                                @Html.Label("- -")
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dateMessage)
                    </td>
                    <td>
                        @{
                            if (item.emailAddressUserDontRegis != null)
                            {
                                <a href="mailto: @item.emailAddressUserDontRegis">@item.emailAddressUserDontRegis</a>
                            }
                            else
                            {
                                int idtemp = 0; // Msg Support 
                                if (item.subject == "Found Object")
                                {
                                    idtemp = item.FoundObjectId.Value;
                                }
                                if (item.subject == "Lost Object")
                                {
                                    idtemp = item.LostObjectId.Value;
                                }
                                HttpCookie authCookie = Request.Cookies[FormsAuthentication.FormsCookieName];
                                FormsAuthenticationTicket ticket = FormsAuthentication.Decrypt(authCookie.Value);
                                if (item.InfoUser.UserName == ticket.Name)
                                {
                                    @Html.ActionLink("Send other message to " + item.InfoUser.UserName, "SendMessage", "UsersContact", new { id = idtemp, userSendMsg = item.InfoUser1.Id, userDestMsg = item.InfoUser.Id, subject = item.subject }, null)
                                }
                                else
                                {
                                    @Html.ActionLink(item.InfoUser.UserName, "SendMessage", "UsersContact", new { id = idtemp, userSendMsg = item.InfoUser1.Id, userDestMsg = item.InfoUser.Id, subject = item.subject }, null)
                                }
                            }
                        }
                        
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "DeleteMessages", new { id = item.Id })
                    </td>
                </tr>
                }
            </table>
</body>
</html>




